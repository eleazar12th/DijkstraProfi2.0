const FIRST_STEP_RU_TEXT = (<div>
    <p>
        Пусть dist[v] - это длинна пути из начальной вершины start в вершину v.
        Если пути из start в v не сущетствует или мы его пока не знаем, dist[v] равен бесконечности.
        Тогда задача алгоритма - найти минимальное значение dist[v] для всех v.
        На рисунке в каждой вершине v записано v: dist[v].
    </p>

    <p>
        Разделим вершины на три типа.
        <br />
        <i>Обработанные (зелёные)</i> - те, до которых мы уже знаем кратчайший путь.
        <br />
        <i>Частично обработанные (голубые)</i> - те, до которых мы знаем некоторый
        (возможно неоптимальный) путь.
        <br />
        <i>Необработанные (серые)</i> - те, до которых мы не знаем ни одного пути.
    </p>

    <p>
        Расстояние от начальной вершины до неё самой равно 0.
    </p>
</div>);

const TURN_EDGES_RED_RU_TEXT = (<p>
    Теперь рассматриваем все, ещё не обработанные
    (серые и голубые) вершины u, в которые можно попасть из v.
</p>);

const UPDATE_DISTANCE_RU_TEXT = (<div>
    <p>
        Для каждой u пытаемся улучшить значение dist[u].
        Пусть длина ребра из v в u равна len. Тогда наименьшее
        возможное расстояние до u, которое мы сейчас можем найти,
        - это min(dist[u], dist[v] + len).
        <br />
        Если u была серой, красим её в голубой (теперь она среди вершин,
        про которые мы уже что-то знаем).
    </p>
</div>);
const TURN_EDGES_BLACK_RU_TEXT = (
    <p>
        Итерация алгоритма завершена. Возвращаемся к первому шагу.
    </p>
);

const SELECT_GREEN_NODE_RU_TEXT = (<p>
    Из голубых (частично обработанных) вершин, выбираем вершину v
    с минимальным расстоянием от начальной и помечаем как обработанную
    (красим в зелёный цвет).
</p>);

const LAST_STEP_RU_TEXT = (<p>
    Голубых вершин не осталось. Значит, работа алгоритма завершена.
    Мы нашли минимальное расстояние до каждой вершины.
</p>);

export const RU_HINTS = {
    "FIRST_STEP": FIRST_STEP_RU_TEXT,
    "TURN_EDGES_RED": TURN_EDGES_RED_RU_TEXT,
    "UPDATE_DISTANCE": UPDATE_DISTANCE_RU_TEXT,
    "TURN_EDGES_BLACK": TURN_EDGES_BLACK_RU_TEXT,
    "SELECT_GREEN_NODE": SELECT_GREEN_NODE_RU_TEXT,
    "LAST_STEP": LAST_STEP_RU_TEXT,
}
